name: Backend and frontend CD
on: workflow_dispatch

jobs:

  build-push:
    runs-on: githubrunner-kb-bi
    env:
      GITHUB_ACTIONS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_ACTOR: ${{ github.actor }}
      GITHUB_SHA: ${{ github.sha }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: adjust maven wrapper permissions
      run: chmod +x mvnw
    - name: dependency check project
      run: ./mvnw org.owasp:dependency-check-maven:check -DfailBuildOnCVSS=8
    - name: test with maven
      run: ./mvnw clean test
    - name: setup node
      uses: actions/setup-node@v3
      with:
        node-version: latest
    - name: setup frontend project
      working-directory: ./frontend_vue
      run: npm ci
    - name: run lint
      working-directory: ./frontend_vue
      run: npm run lint
    - name: run unit tests
      working-directory: ./frontend_vue
      run: npm run test:unit
    - name: build backend and include frontend
      working-directory: ./backend_spring
      run: ../mvnw --batch-mode package -DskipTests
    - name: start liquibase and postgres database
      run: |
        docker-compose down
        docker-compose up -d --build
    - name: start backend in test mode
      working-directory: ./backend_spring/target
      run: java -jar -Dspring.profiles.active=test backend_spring-1.0-SNAPSHOT.jar &
    - name: run cypress tests
      uses: cypress-io/github-action@v4
      with:
        install: false
        working-directory: ./frontend_vue
        start: npm run dev -- --port 4173 --mode test
        wait-on: 'http://127.0.0.1:4173/'
        browser: electron

    - name: login to github registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        file: Dockerfile
        tags: |
          ghcr.io/klosebrothers/kb-app:${{ github.sha }}
          ghcr.io/klosebrothers/kb-app:latest
    - name: build and push liquibase container image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile_liquibase
        push: true
        tags: |
          ghcr.io/klosebrothers/kb-app_liquibase:${{ github.sha }}
          ghcr.io/klosebrothers/kb-app_liquibase:latest

  deploy-to-k8s:
    runs-on: githubrunner-kb-bi
    needs: build-push
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      - name: login to github registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: set context
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.OVH_KB_K8S_KUBECONFIG }}
      - name: deploy to k8s
        uses: azure/k8s-deploy@v1.4
        with:
          manifests: |
            ./k8s/deploy.yml
          images: |
            ghcr.io/klosebrothers/kb-app:${{ github.sha }}
            ghcr.io/klosebrothers/kb-app_liquibase:${{ github.sha }}

  tag-deployed-commit:
    runs-on: githubrunner-kb-bi
    needs: deploy-to-k8s
    steps:
      - name: Get current date for tagging commit
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H-%M')"
      - name: tag commit with deployed
        uses: actions/github-script@v3
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/kb-app-${{steps.date.outputs.date}}",
              sha: context.sha
            })