name: Backend and frontend CI
on: push

jobs:

  run-tests:
    runs-on: githubrunner-kb-bi
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: adjust maven wrapper permissions
      run: chmod +x mvnw
    - name: test with maven
      run: ./mvnw clean test
    - name: setup node
      uses: actions/setup-node@v3
      with:
        node-version: latest
    - name: setup frontend project
      working-directory: ./frontend_vue
      run: npm ci
    - name: run lint
      working-directory: ./frontend_vue
      run: npm run lint
    - name: run unit tests
      working-directory: ./frontend_vue
      run: npm run test:unit
    - name: build backend and include frontend
      run: ./mvnw --batch-mode package -DskipTests
    - name: start liquibase and postgres database
      run: |
        docker-compose down
        docker-compose up -d --build
    - name: start backend in test mode
      working-directory: ./backend_spring/target
      run: java -jar -Dspring.profiles.active=test backend_spring-1.0-SNAPSHOT.jar &
    - name: run cypress tests
      uses: cypress-io/github-action@v4
      with:
        install: false
        working-directory: ./frontend_vue
        start: npm run dev -- --port 4173 --mode test
        wait-on: 'http://127.0.0.1:4173/'
        browser: electron

  check-dependencies:
    runs-on: githubrunner-kb-bi
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: adjust maven wrapper permissions
      run: chmod +x mvnw
    - name: dependency check project
      run: ./mvnw org.owasp:dependency-check-maven:check -DfailBuildOnCVSS=8

#  sonar:
#    needs: run-backend-tests
#    runs-on: githubrunner-k8s-sonarqube
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '17'
#      - name: build project
#        run: ./mvnw package -DskipTests
#      - name: sonar scan
#        uses: sonarsource/sonarqube-scan-action@master
#        with:
#          args: >
#            -Dsonar.projectKey=kb-app
#            -Dsonar.sources=backend_spring/src
#            -Dsonar.java.binaries=backend_spring/target
#            -Dsonar.language=java
#            -Dsonar.sourceEncoding=UTF-8
#            -Dsonar.java.coveragePlugin=jacoco
#            -Dsonar.coverage.jacoco.xmlReportPath=backend_spring/target/jacoco.exec
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}